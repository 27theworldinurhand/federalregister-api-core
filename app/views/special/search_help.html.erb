<h1 class="title"><span>Search Help</span></h1>

<% section_tag(:id => 'content_area') do %>

  <p>We support numerous ways to customize your search. Some of these are exposed via the advanced search options and others are inherently available in the search entry box. This document details the later case.</p>

  <p>Before we begin we should mention a caveat with search excerpts. Due to the complexity caused by using the advanced search features below, the search excerpt below each returned search option may not reflect the complexity of your query.</p>


  <h2>Boolean Queries</h2>

  <p>Boolean queries support grouping, AND, OR, and NOT operations. Allowing you to include or exclude words. Grouping makes this even more powerful as given in the example below.</p>

  <p>Usage:</p>
  <dl>
    <dt>AND:</dt> <dd>tensile & strength</dd>
    <dt>OR:</dt>  <dd>pipe | pipeline</dd>
    <dt>NOT:</dt> <dd>tensile -strength, also tensile !strength</dd>
    <dt>Grouping:</dt> <dd>(tensile & strength) & (pipe | pipeline)</dd>
  </dl>
  <p><strong>Example:</strong> If you are looking for documents that have content related to tensile strength on pipelines you may start your search with: tensile strength pipelines. This search would result in 56 articles being returned.</p>

  <p>However you realize that the search is excluding content that only mentions pipes. You can then modify your search using grouping and the OR operator to be: tensile strength (pipes | pipelines). This results in 180 documents being returned.</p>

  <p>Now you notice that many of the articles are about waivers and antidumping. You can modify your search using the NOT operator as follows: tensile strength (pipes | pipelines) -waiver -antidumping. This results in a more manageable 86 results.</p>


  <h2>Phrase Search</h2>

  <p>You can use quotes ("") to wrap some or all of your search terms. By wrapping terms in quotes you are telling the search engine to look for those words ADJACENT to each other.</p>

  <p><strong>Example:</strong> To continue our example in Part I above (the last search being: tensile strength (pipes | pipelines) -waiver -antidumping) you notice that there are documents returned with either tensile or strength but scatter throughout the document. You can refine your query with: "tensile strength" (pipes | pipelines) -waiver -antidumping. This results in 66 matches (20 fewer than before).</p>


  <h2>Exact Form Searches</h2>

  <p>By default we match words based on their stem word. So when you search 'fish', we also match documents containing 'fishing' and 'fished' (and vice versa). This holds true for plural forms as well, 'fishery' also matches 'fisheries'. Exact form matches use the '=' operating in front of the word you wish to have exactly matched.</p>

  <p><strong>Usage:</strong> =airworthiness, matches only documents with the exact word airworthiness</p>

  <p><strong>Example:</strong> =fishing would only match documents with the word 'fishing' and not documents with the words 'fish' or 'fished'. Along the same lines =fishery would not match 'fisheries' only 'fishery'.</p>


  <p>Proximity Searches</p>

  <p>When using a quoted string in a search you can specify that you want a proximity match. Proximity is specified in words and adjusted for overall word count. Proximity searches utilize the '~' operator followed by a number.</p>

  <p><strong>Usage:</strong> "rebuilt parts"~2, means there must be a less than 4 word span that matches. This would match "rebuilt vehicular parts" but not "rebuilt foreign vehicular parts"</p>

  <p><strong>Example:</strong> If you were to search: "rebuilt parts" in FR2 you would have 14 returned results. You can expand your search incrementally with a proximity search: "rebuilt parts"~2 would allow matches on "rebuilt vehicular parts" and "rebuilt boat parts". A search for: "rebuilt parts"~3 would allow matches on "rebuilt foreign vehicular parts" and "rebuilt domestic boat parts".</p>


  <h2>Quorum Searches</h2>

  <p>When using a quoted string quorum searches allow for a form of fuzzy matching. This uses the '/' operated followed by a number.</p>

  <p><strong>Usage:</strong> "rebuilt foreign domestic vehicular boat parts"/3 would match any document that contains at least 3 of the 6 words. This is especially useful when you are looking for a familiar document with phrasing you remember or for documents that deal with a smaller subclass of common wording as in our example.</p>

  <p><strong>Example:</strong> Returning to our example in Part IV above you could search: "rebuilt vehicular boat parts"/3 which would allow matches on documents containing rebuilt, vehicular, and parts; rebuilt, boat, and parts; and vehicular, rebuilt, and parts. Remember this is matching words in a document not a phrase match as with the '~' operator in Part IV.</p>


  <h2>Precedence Searches</h2>

  <p>We also support queries based on word (or phrase) ordering. This makes use of the '<<' operator and is useful at the times you know the rough order of a words in a phrase in a document but not the exact phrase.</p>

  <p><strong>Usage:</strong> rebuilt << parts, ensures that matches contain those words in that order</p>

  <p><strong>Example:</strong> Lets say you are looking for a document that you know contains the words 'rebuilt', 'reclaimed', 'vehicular', 'parts' in that order but aren't sure how exactly the phrase was constructed (perhaps is was: 'rebuilt or reclaimed vehicular and boat parts are now...'). By searching: rebuilt << reclaimed << vehicular << parts, you would match the document you are looking for without needing to know the exact phrasing of the document before hand.</p>


  <p>Like many of the search types above all of these can be combined for more powerful searches (some more useful than others of course). To continue our example in Part VI above perhaps you wanted to search for phrases like, 'rebuilt and reclaimed vehicular parts' and 'rebuilt and reclaimed boat parts'. You could combine boolean operators with precedence and modify your search to be: rebuilt << reclaimed << (vehicular | boat) << parts, thus matching both of the new, slightly modified phrases.</p>

<% end %>

<% aside_tag(:id => 'sidebar') do %>
  <% section_tag(:id => 'relevant_links') do %>
    <h1 class="title_bar">Relevant Links</h1>
    <ul class="bullets">
      <li><a href="/learn/the_rulemaking_process.pdf">The Rulemaking Process (PDF)</a></li>
      <li><a href="/learn/fr_101.pdf">Federal Register 101 (PDF)</a></li>
      <li><a href="/learn/fr_history.pdf">History of the Office of the Federal Register (PDF)</a></li>
      <li><a href="/learn/fr_pamphlet.pdf">Brochure of OFR Publications (PDF)</a></li>
      <li><a href="/learn/fr_facts.pdf">Federal Register Facts (PDF)</a></li>
      <li><a href="/learn/fr_50th.pdf">Federal Register Founders (PDF)</a></li>
      <li><a href="/learn/fr_origins.pdf">Federal Register: Origins, Formulation, Realization, and Heritage (PDF)</a></li>
    </ul>
  <% end -%>
<% end -%>